version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    restart: always

  kafka-init:
    image: wurstmeister/kafka
    container_name: kafka-init
    depends_on:
      - kafka
    restart: "no"
    entrypoint: ["/bin/sh", "-c"]
    command: |
      "
      # Wait for Kafka to be ready
      sleep 10
      # Create topic if it doesn't exist
      kafka-topics.sh --create --if-not-exists --topic charging_requests --bootstrap-server kafka:9092 --partitions 3 --replication-factor 1
      "
  
  chargebackend:
    build:
      context: ./charge_server/chargedjango
    container_name: chargebackend
    command: gunicorn charge_service_project.wsgi --bind 0.0.0.0:8000
    ports: 
      - "8000:8000"
    volumes:
      - ./charge_server/chargedjango/db.sqlite3:/backend/db.sqlite3
    restart: always
    depends_on:
      - kafka-init
 
      

  kafka_consumer:
    build:
      context: ./charge_server/chargedjango
    container_name: kafka_consumer
    environment:
      - KAFKA_BROKER=kafka:9092
    command: sh -c "python charging_api/kafka_consumer.py"
    depends_on:
      - kafka-init
      - chargebackend
    volumes:
      - ./charge_server/chargedjango/db.sqlite3:/backend/db.sqlite3

  nginx:
    build:
      context: ./charge_server/nginx
    container_name: nginx
    ports:
      - "80:80"
      - "8080:8080"
    depends_on:
      - chargebackend
    restart: always










# version: '3.3'

# services:
#   chargebackend:
#     build:
#       context: ./charge_server/chargedjango
#     container_name: chargebackend
#     command: gunicorn charge_service_project.wsgi --bind 0.0.0.0:8000
#     ports: 
#       - 8000:8000
   
#     restart: always
#     depends_on:
#       - kafka
  
#   kafka_consumer:
#     build:
#       context: ./charge_server/chargedjango
#     container_name: kafka_consumer
#     command: python charging_api/kafka_consumer.py
#     depends_on:
#       - chargebackend
#       - kafka
#   nginx:
#     # image: nginx:1.23.4 #latest
#     build:
#       context: ./charge_server/nginx
#     container_name: nginx
#     ports:
#       - 80:80
#       - 8080:8080
#     # volumes:
#     #   # - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
#     #   # - ./frontend/build:/var/www/react 
#     depends_on:
#       - chargebackend
#     restart: always
  
#   zookeeper:
#     image: wurstmeister/zookeeper
#     container_name: zookeeper
#     ports:
#       - "2181:2181"
  
